syntax = "proto3";
package secretMessageGenerator_grpc_api;

//~/Programs/protoc-3.13.0-linux-x86_64/bin/protoc  -I ../grpc_api/qml_server_grpc_api --go_out=plugins=grpc:../grpc_api/qml_server_grpc_api ../grpc_api/qml_server_grpc_api/qml_grpc_server.proto
// Parameter used for Empty inputs
message EmptyParameter {
}

// Ack/Nack- Response message with comment
message AckNackResponse {
    bool acknack = 1; // True=Ack, False=Nack
    string comments = 2; //Comments if needed
}

// Services published by secretMessageGenerator System
// secretMessageGenerator generates a secret that will be used when creating Signatures used for Rule Verification
// ***********************
service secretMessageGeneratorGrpcService {

    // Generate secrete used when signing
    rpc GenerateSecretFromInput (GenerateSecretFromInputRequest) returns (GenerateSecretFromInputResponse) {
    }

    // Shut down server in a controlled way
    rpc ShutDownsecretMessageGeneratorServer (EmptyParameter) returns (AckNackResponse) {

    }
}

// Request message when to create the secret message used when signing
message GenerateSecretFromInputRequest {
    string userId = 1; //User Id, used when creating secret
    string company = 2; // Users company, used when creating secret
    repeated Account accounts = 3; // List of all accounts that the user can see
    repeated AccountType accountTypes = 4; //List of all account types that the user can see
    repeated Company companies = 5; //List of all companies that the user can see
}

// Response message used when signing
message GenerateSecretFromInputResponse {
    string secret = 1; //The secret that was created
    bool acknack = 2; // True=Ack, False=Nack
    string comments = 3; //Comments if needed
}

//  Holds the account that the user has access to
message Account {
    string account =1; // Account number
}

//  Holds the account type that the user has access to
message AccountType {
    string accountType =1; // Account type
}

//  Holds the company type that the user has access to
message Company {
    string company =1; // Company
}
