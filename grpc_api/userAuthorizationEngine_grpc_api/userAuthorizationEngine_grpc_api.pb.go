// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userAuthorizationEngine_grpc_api.proto

package userAuthorizationEngine_grpc_api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//~/Programs/protoc-3.13.0-linux-x86_64/bin/protoc  -I ../grpc_api/userAuthorizationEngine_grpc_api --go_out=plugins=grpc:../grpc_api/userAuthorizationEngine_grpc_api ../grpc_api/userAuthorizationEngine_grpc_api/qml_grpc_server.proto
// Parameter used for Empty inputs
type EmptyParameter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyParameter) Reset()         { *m = EmptyParameter{} }
func (m *EmptyParameter) String() string { return proto.CompactTextString(m) }
func (*EmptyParameter) ProtoMessage()    {}
func (*EmptyParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{0}
}

func (m *EmptyParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyParameter.Unmarshal(m, b)
}
func (m *EmptyParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyParameter.Marshal(b, m, deterministic)
}
func (m *EmptyParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyParameter.Merge(m, src)
}
func (m *EmptyParameter) XXX_Size() int {
	return xxx_messageInfo_EmptyParameter.Size(m)
}
func (m *EmptyParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyParameter.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyParameter proto.InternalMessageInfo

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	Acknack              bool     `protobuf:"varint,1,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,2,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckNackResponse) Reset()         { *m = AckNackResponse{} }
func (m *AckNackResponse) String() string { return proto.CompactTextString(m) }
func (*AckNackResponse) ProtoMessage()    {}
func (*AckNackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{1}
}

func (m *AckNackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckNackResponse.Unmarshal(m, b)
}
func (m *AckNackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckNackResponse.Marshal(b, m, deterministic)
}
func (m *AckNackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckNackResponse.Merge(m, src)
}
func (m *AckNackResponse) XXX_Size() int {
	return xxx_messageInfo_AckNackResponse.Size(m)
}
func (m *AckNackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckNackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckNackResponse proto.InternalMessageInfo

func (m *AckNackResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *AckNackResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

// *********************************************************************
// Request message with parameters for Boolean Rule engine
type UserAuthorizationRequest struct {
	UserId               string         `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CompanyId            string         `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	CallingApi           int32          `protobuf:"varint,3,opt,name=callingApi,proto3" json:"callingApi,omitempty"`
	Accounts             []*Account     `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	AccountTypes         []*AccountType `protobuf:"bytes,5,rep,name=accountTypes,proto3" json:"accountTypes,omitempty"`
	Companies            []*Company     `protobuf:"bytes,6,rep,name=companies,proto3" json:"companies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserAuthorizationRequest) Reset()         { *m = UserAuthorizationRequest{} }
func (m *UserAuthorizationRequest) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizationRequest) ProtoMessage()    {}
func (*UserAuthorizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{2}
}

func (m *UserAuthorizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizationRequest.Unmarshal(m, b)
}
func (m *UserAuthorizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizationRequest.Marshal(b, m, deterministic)
}
func (m *UserAuthorizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizationRequest.Merge(m, src)
}
func (m *UserAuthorizationRequest) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizationRequest.Size(m)
}
func (m *UserAuthorizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizationRequest proto.InternalMessageInfo

func (m *UserAuthorizationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizationRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *UserAuthorizationRequest) GetCallingApi() int32 {
	if m != nil {
		return m.CallingApi
	}
	return 0
}

func (m *UserAuthorizationRequest) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *UserAuthorizationRequest) GetAccountTypes() []*AccountType {
	if m != nil {
		return m.AccountTypes
	}
	return nil
}

func (m *UserAuthorizationRequest) GetCompanies() []*Company {
	if m != nil {
		return m.Companies
	}
	return nil
}

// Response message from Boolean Rule Engine
type UserAuthorizationResponse struct {
	UserIsAllowedToExecuteCallingApi bool     `protobuf:"varint,1,opt,name=userIsAllowedToExecuteCallingApi,proto3" json:"userIsAllowedToExecuteCallingApi,omitempty"`
	Acknack                          bool     `protobuf:"varint,3,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments                         string   `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *UserAuthorizationResponse) Reset()         { *m = UserAuthorizationResponse{} }
func (m *UserAuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizationResponse) ProtoMessage()    {}
func (*UserAuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{3}
}

func (m *UserAuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizationResponse.Unmarshal(m, b)
}
func (m *UserAuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizationResponse.Marshal(b, m, deterministic)
}
func (m *UserAuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizationResponse.Merge(m, src)
}
func (m *UserAuthorizationResponse) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizationResponse.Size(m)
}
func (m *UserAuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizationResponse proto.InternalMessageInfo

func (m *UserAuthorizationResponse) GetUserIsAllowedToExecuteCallingApi() bool {
	if m != nil {
		return m.UserIsAllowedToExecuteCallingApi
	}
	return false
}

func (m *UserAuthorizationResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *UserAuthorizationResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

// *********************************************************************
// Request message listing users authorized accounts
type UserAuthorizedAccountsRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CompanyId            string   `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthorizedAccountsRequest) Reset()         { *m = UserAuthorizedAccountsRequest{} }
func (m *UserAuthorizedAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedAccountsRequest) ProtoMessage()    {}
func (*UserAuthorizedAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{4}
}

func (m *UserAuthorizedAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedAccountsRequest.Unmarshal(m, b)
}
func (m *UserAuthorizedAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedAccountsRequest.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedAccountsRequest.Merge(m, src)
}
func (m *UserAuthorizedAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedAccountsRequest.Size(m)
}
func (m *UserAuthorizedAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedAccountsRequest proto.InternalMessageInfo

func (m *UserAuthorizedAccountsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizedAccountsRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

// Response message listing users authorized accounts
type UserAuthorizedAccountsResponse struct {
	UserId               string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CompanyId            string     `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	Acknack              bool       `protobuf:"varint,3,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string     `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	Accounts             []*Account `protobuf:"bytes,5,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserAuthorizedAccountsResponse) Reset()         { *m = UserAuthorizedAccountsResponse{} }
func (m *UserAuthorizedAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedAccountsResponse) ProtoMessage()    {}
func (*UserAuthorizedAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{5}
}

func (m *UserAuthorizedAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedAccountsResponse.Unmarshal(m, b)
}
func (m *UserAuthorizedAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedAccountsResponse.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedAccountsResponse.Merge(m, src)
}
func (m *UserAuthorizedAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedAccountsResponse.Size(m)
}
func (m *UserAuthorizedAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedAccountsResponse proto.InternalMessageInfo

func (m *UserAuthorizedAccountsResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizedAccountsResponse) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *UserAuthorizedAccountsResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *UserAuthorizedAccountsResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *UserAuthorizedAccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

//  Holds the account that the user has access to
type Account struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{6}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// *********************************************************************
// Request message listing users authorized account types
type UserAuthorizedAccountTypesRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CompanyId            string   `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthorizedAccountTypesRequest) Reset()         { *m = UserAuthorizedAccountTypesRequest{} }
func (m *UserAuthorizedAccountTypesRequest) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedAccountTypesRequest) ProtoMessage()    {}
func (*UserAuthorizedAccountTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{7}
}

func (m *UserAuthorizedAccountTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedAccountTypesRequest.Unmarshal(m, b)
}
func (m *UserAuthorizedAccountTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedAccountTypesRequest.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedAccountTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedAccountTypesRequest.Merge(m, src)
}
func (m *UserAuthorizedAccountTypesRequest) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedAccountTypesRequest.Size(m)
}
func (m *UserAuthorizedAccountTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedAccountTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedAccountTypesRequest proto.InternalMessageInfo

func (m *UserAuthorizedAccountTypesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizedAccountTypesRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

// Response message listing users authorized account types
type UserAuthorizedAccountTypesResponse struct {
	UserId               string         `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	CompanyId            string         `protobuf:"bytes,2,opt,name=companyId,proto3" json:"companyId,omitempty"`
	Acknack              bool           `protobuf:"varint,3,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string         `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	AccountTypes         []*AccountType `protobuf:"bytes,5,rep,name=accountTypes,proto3" json:"accountTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserAuthorizedAccountTypesResponse) Reset()         { *m = UserAuthorizedAccountTypesResponse{} }
func (m *UserAuthorizedAccountTypesResponse) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedAccountTypesResponse) ProtoMessage()    {}
func (*UserAuthorizedAccountTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{8}
}

func (m *UserAuthorizedAccountTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedAccountTypesResponse.Unmarshal(m, b)
}
func (m *UserAuthorizedAccountTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedAccountTypesResponse.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedAccountTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedAccountTypesResponse.Merge(m, src)
}
func (m *UserAuthorizedAccountTypesResponse) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedAccountTypesResponse.Size(m)
}
func (m *UserAuthorizedAccountTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedAccountTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedAccountTypesResponse proto.InternalMessageInfo

func (m *UserAuthorizedAccountTypesResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizedAccountTypesResponse) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *UserAuthorizedAccountTypesResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *UserAuthorizedAccountTypesResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *UserAuthorizedAccountTypesResponse) GetAccountTypes() []*AccountType {
	if m != nil {
		return m.AccountTypes
	}
	return nil
}

//  Holds the account type that the user has access to
type AccountType struct {
	AccountType          string   `protobuf:"bytes,1,opt,name=accountType,proto3" json:"accountType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountType) Reset()         { *m = AccountType{} }
func (m *AccountType) String() string { return proto.CompactTextString(m) }
func (*AccountType) ProtoMessage()    {}
func (*AccountType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{9}
}

func (m *AccountType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountType.Unmarshal(m, b)
}
func (m *AccountType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountType.Marshal(b, m, deterministic)
}
func (m *AccountType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountType.Merge(m, src)
}
func (m *AccountType) XXX_Size() int {
	return xxx_messageInfo_AccountType.Size(m)
}
func (m *AccountType) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountType.DiscardUnknown(m)
}

var xxx_messageInfo_AccountType proto.InternalMessageInfo

func (m *AccountType) GetAccountType() string {
	if m != nil {
		return m.AccountType
	}
	return ""
}

// *********************************************************************
// Request message listing users authorized companies
type UserAuthorizedCompaniesRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthorizedCompaniesRequest) Reset()         { *m = UserAuthorizedCompaniesRequest{} }
func (m *UserAuthorizedCompaniesRequest) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedCompaniesRequest) ProtoMessage()    {}
func (*UserAuthorizedCompaniesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{10}
}

func (m *UserAuthorizedCompaniesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedCompaniesRequest.Unmarshal(m, b)
}
func (m *UserAuthorizedCompaniesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedCompaniesRequest.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedCompaniesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedCompaniesRequest.Merge(m, src)
}
func (m *UserAuthorizedCompaniesRequest) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedCompaniesRequest.Size(m)
}
func (m *UserAuthorizedCompaniesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedCompaniesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedCompaniesRequest proto.InternalMessageInfo

func (m *UserAuthorizedCompaniesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// Response message listing users authorized companies
type UserAuthorizedCompaniesResponse struct {
	UserId               string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Acknack              bool       `protobuf:"varint,3,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string     `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	Companies            []*Company `protobuf:"bytes,5,rep,name=companies,proto3" json:"companies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserAuthorizedCompaniesResponse) Reset()         { *m = UserAuthorizedCompaniesResponse{} }
func (m *UserAuthorizedCompaniesResponse) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedCompaniesResponse) ProtoMessage()    {}
func (*UserAuthorizedCompaniesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{11}
}

func (m *UserAuthorizedCompaniesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedCompaniesResponse.Unmarshal(m, b)
}
func (m *UserAuthorizedCompaniesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedCompaniesResponse.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedCompaniesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedCompaniesResponse.Merge(m, src)
}
func (m *UserAuthorizedCompaniesResponse) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedCompaniesResponse.Size(m)
}
func (m *UserAuthorizedCompaniesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedCompaniesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedCompaniesResponse proto.InternalMessageInfo

func (m *UserAuthorizedCompaniesResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizedCompaniesResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *UserAuthorizedCompaniesResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *UserAuthorizedCompaniesResponse) GetCompanies() []*Company {
	if m != nil {
		return m.Companies
	}
	return nil
}

//  Holds the company type that the user has access to
type Company struct {
	Company              string   `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Company) Reset()         { *m = Company{} }
func (m *Company) String() string { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()    {}
func (*Company) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{12}
}

func (m *Company) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Company.Unmarshal(m, b)
}
func (m *Company) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Company.Marshal(b, m, deterministic)
}
func (m *Company) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Company.Merge(m, src)
}
func (m *Company) XXX_Size() int {
	return xxx_messageInfo_Company.Size(m)
}
func (m *Company) XXX_DiscardUnknown() {
	xxx_messageInfo_Company.DiscardUnknown(m)
}

var xxx_messageInfo_Company proto.InternalMessageInfo

func (m *Company) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

// *********************************************************************
// Request message listing users authorized rules
type UserAuthorizedRulesRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthorizedRulesRequest) Reset()         { *m = UserAuthorizedRulesRequest{} }
func (m *UserAuthorizedRulesRequest) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedRulesRequest) ProtoMessage()    {}
func (*UserAuthorizedRulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{13}
}

func (m *UserAuthorizedRulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedRulesRequest.Unmarshal(m, b)
}
func (m *UserAuthorizedRulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedRulesRequest.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedRulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedRulesRequest.Merge(m, src)
}
func (m *UserAuthorizedRulesRequest) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedRulesRequest.Size(m)
}
func (m *UserAuthorizedRulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedRulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedRulesRequest proto.InternalMessageInfo

func (m *UserAuthorizedRulesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// Response message listing users authorized companies
type UserAuthorizedRulesResponse struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Acknack              bool     `protobuf:"varint,3,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	Rules                []*Rule  `protobuf:"bytes,5,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuthorizedRulesResponse) Reset()         { *m = UserAuthorizedRulesResponse{} }
func (m *UserAuthorizedRulesResponse) String() string { return proto.CompactTextString(m) }
func (*UserAuthorizedRulesResponse) ProtoMessage()    {}
func (*UserAuthorizedRulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{14}
}

func (m *UserAuthorizedRulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAuthorizedRulesResponse.Unmarshal(m, b)
}
func (m *UserAuthorizedRulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAuthorizedRulesResponse.Marshal(b, m, deterministic)
}
func (m *UserAuthorizedRulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuthorizedRulesResponse.Merge(m, src)
}
func (m *UserAuthorizedRulesResponse) XXX_Size() int {
	return xxx_messageInfo_UserAuthorizedRulesResponse.Size(m)
}
func (m *UserAuthorizedRulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuthorizedRulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuthorizedRulesResponse proto.InternalMessageInfo

func (m *UserAuthorizedRulesResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAuthorizedRulesResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *UserAuthorizedRulesResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *UserAuthorizedRulesResponse) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

//  Holds the company type that the user has access to
type Rule struct {
	Rule                 string   `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_f486cd898f074c5b, []int{15}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyParameter)(nil), "userAuthorizationEngine_grpc_api.EmptyParameter")
	proto.RegisterType((*AckNackResponse)(nil), "userAuthorizationEngine_grpc_api.AckNackResponse")
	proto.RegisterType((*UserAuthorizationRequest)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizationRequest")
	proto.RegisterType((*UserAuthorizationResponse)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizationResponse")
	proto.RegisterType((*UserAuthorizedAccountsRequest)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedAccountsRequest")
	proto.RegisterType((*UserAuthorizedAccountsResponse)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedAccountsResponse")
	proto.RegisterType((*Account)(nil), "userAuthorizationEngine_grpc_api.Account")
	proto.RegisterType((*UserAuthorizedAccountTypesRequest)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedAccountTypesRequest")
	proto.RegisterType((*UserAuthorizedAccountTypesResponse)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedAccountTypesResponse")
	proto.RegisterType((*AccountType)(nil), "userAuthorizationEngine_grpc_api.AccountType")
	proto.RegisterType((*UserAuthorizedCompaniesRequest)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedCompaniesRequest")
	proto.RegisterType((*UserAuthorizedCompaniesResponse)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedCompaniesResponse")
	proto.RegisterType((*Company)(nil), "userAuthorizationEngine_grpc_api.Company")
	proto.RegisterType((*UserAuthorizedRulesRequest)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedRulesRequest")
	proto.RegisterType((*UserAuthorizedRulesResponse)(nil), "userAuthorizationEngine_grpc_api.UserAuthorizedRulesResponse")
	proto.RegisterType((*Rule)(nil), "userAuthorizationEngine_grpc_api.Rule")
}

func init() {
	proto.RegisterFile("userAuthorizationEngine_grpc_api.proto", fileDescriptor_f486cd898f074c5b)
}

var fileDescriptor_f486cd898f074c5b = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xee, 0xb6, 0x49, 0x93, 0x4c, 0x10, 0x54, 0x7b, 0x40, 0xc6, 0x0d, 0x8d, 0xd9, 0x4a, 0x55,
	0x38, 0x50, 0xa0, 0x70, 0x40, 0x50, 0x04, 0x56, 0x1a, 0x45, 0x41, 0x08, 0x81, 0xdb, 0x1e, 0x38,
	0x55, 0x66, 0xb3, 0x4a, 0xad, 0x24, 0xb6, 0xf1, 0xda, 0x94, 0xf0, 0x04, 0x5c, 0x78, 0x00, 0x0e,
	0x5c, 0x90, 0x38, 0x70, 0xe1, 0xcc, 0x7b, 0xe4, 0x11, 0x78, 0x11, 0x64, 0x7b, 0xe3, 0xd8, 0xf9,
	0xc1, 0x89, 0x03, 0xe2, 0xe6, 0x19, 0x7b, 0xbe, 0xfd, 0xe6, 0x9b, 0x1f, 0x2f, 0xec, 0x79, 0x9c,
	0x39, 0xaa, 0xe7, 0x9e, 0x5b, 0x8e, 0xf1, 0x41, 0x77, 0x0d, 0xcb, 0x6c, 0x98, 0x1d, 0xc3, 0x64,
	0x67, 0x1d, 0xc7, 0xa6, 0x67, 0xba, 0x6d, 0xec, 0xdb, 0x8e, 0xe5, 0x5a, 0x58, 0x49, 0xfb, 0x8e,
	0x6c, 0xc1, 0xe5, 0x46, 0xdf, 0x76, 0x07, 0x2f, 0x75, 0x47, 0xef, 0x33, 0x97, 0x39, 0xa4, 0x09,
	0x57, 0x54, 0xda, 0x7d, 0xa1, 0xd3, 0xae, 0xc6, 0xb8, 0x6d, 0x99, 0x9c, 0x61, 0x09, 0x0a, 0x3a,
	0xed, 0x9a, 0x3a, 0xed, 0x4a, 0x48, 0x41, 0xb5, 0xa2, 0x36, 0x32, 0xb1, 0x0c, 0x45, 0x6a, 0xf5,
	0xfb, 0xcc, 0x74, 0xb9, 0xb4, 0xae, 0xa0, 0x5a, 0x49, 0x8b, 0x6c, 0x32, 0x5c, 0x07, 0xe9, 0x74,
	0xf2, 0x7c, 0x8d, 0xbd, 0xf5, 0x18, 0x77, 0xf1, 0x55, 0xd8, 0xf4, 0xb9, 0xb5, 0xda, 0x01, 0x62,
	0x49, 0x13, 0x16, 0xae, 0x40, 0x89, 0x5a, 0x7d, 0x5b, 0x37, 0x07, 0xad, 0xb6, 0x40, 0x1c, 0x3b,
	0xf0, 0x0e, 0x00, 0xd5, 0x7b, 0x3d, 0xc3, 0xec, 0xa8, 0xb6, 0x21, 0x6d, 0x28, 0xa8, 0x96, 0xd7,
	0x62, 0x1e, 0xdc, 0x80, 0xa2, 0x4e, 0xa9, 0xe5, 0xf9, 0x74, 0x72, 0xca, 0x46, 0xad, 0x7c, 0x70,
	0x73, 0x3f, 0x55, 0x2a, 0x35, 0x8c, 0xd0, 0xa2, 0x50, 0xfc, 0x0a, 0x2e, 0x89, 0xe7, 0x93, 0x81,
	0xcd, 0xb8, 0x94, 0x0f, 0xa0, 0x6e, 0x2d, 0x0c, 0xe5, 0x47, 0x69, 0x09, 0x08, 0xdc, 0x1c, 0xe5,
	0x65, 0x30, 0x2e, 0x6d, 0x2e, 0x4a, 0xad, 0x1e, 0x66, 0xae, 0x8d, 0x63, 0xc9, 0x17, 0x04, 0xd7,
	0x66, 0xa8, 0x2a, 0x2a, 0xf5, 0x0c, 0x82, 0x92, 0xb7, 0xb8, 0xda, 0xeb, 0x59, 0x17, 0xac, 0x7d,
	0x62, 0x35, 0xde, 0x33, 0xea, 0xb9, 0xac, 0x3e, 0x96, 0x2d, 0x2c, 0x61, 0xea, 0x77, 0xf1, 0xaa,
	0x6f, 0xcc, 0xaf, 0x7a, 0x6e, 0xa2, 0xea, 0xa7, 0x70, 0x3d, 0x4e, 0x8f, 0xb5, 0x85, 0x26, 0x7c,
	0xa5, 0xca, 0x93, 0x21, 0x82, 0x9d, 0x79, 0xb8, 0x22, 0xf7, 0x6c, 0x2d, 0x95, 0x29, 0xcb, 0x44,
	0xa3, 0xe5, 0x33, 0x37, 0x1a, 0xd9, 0x85, 0x82, 0x70, 0x86, 0x3c, 0x82, 0x47, 0x41, 0x7f, 0x64,
	0x92, 0xd7, 0x70, 0x63, 0x66, 0xe6, 0x41, 0x63, 0xad, 0xa6, 0xea, 0x2f, 0x04, 0xe4, 0x4f, 0xd8,
	0xff, 0x41, 0xd9, 0xbf, 0x3f, 0x7b, 0xe4, 0x36, 0x94, 0x63, 0x2f, 0xb1, 0x02, 0xe5, 0xd8, 0x6b,
	0x91, 0x52, 0xdc, 0x45, 0x1e, 0x4c, 0xf6, 0x5a, 0x7d, 0x34, 0x7e, 0x29, 0x72, 0x93, 0x9f, 0x08,
	0xaa, 0x73, 0x43, 0x53, 0xd4, 0xcc, 0xa6, 0x57, 0x62, 0xb1, 0xe4, 0x57, 0x58, 0x2c, 0xbb, 0x50,
	0x10, 0x5e, 0x9f, 0x89, 0x28, 0xe3, 0xa8, 0x17, 0x85, 0x49, 0xee, 0x83, 0x9c, 0x4c, 0x4f, 0xf3,
	0x7a, 0xe9, 0xaa, 0x7c, 0x47, 0xb0, 0x3d, 0x33, 0xec, 0x9f, 0x28, 0x72, 0x08, 0x79, 0xc7, 0x87,
	0x17, 0x6a, 0xec, 0xa5, 0xab, 0xe1, 0xb3, 0xd1, 0xc2, 0x20, 0x22, 0x43, 0xce, 0x37, 0x31, 0x86,
	0x9c, 0xef, 0x10, 0x8c, 0x82, 0xe7, 0x83, 0x61, 0x01, 0x2a, 0x53, 0x60, 0x4d, 0xc7, 0xa6, 0xc7,
	0xcc, 0x79, 0x67, 0x50, 0x86, 0x3f, 0x21, 0xd8, 0x6a, 0xf1, 0x64, 0xaa, 0xf8, 0x61, 0x3a, 0x81,
	0x79, 0xbf, 0x49, 0xf9, 0x51, 0xa6, 0xd8, 0x50, 0x56, 0xb2, 0x86, 0xbf, 0x22, 0xd8, 0x7e, 0x6e,
	0x70, 0xd7, 0xff, 0x86, 0x4f, 0xaf, 0x4e, 0xfc, 0x64, 0x39, 0xf8, 0xa9, 0x65, 0x2e, 0x3f, 0xcd,
	0x0e, 0x10, 0x91, 0xfc, 0x81, 0xa0, 0x3a, 0x9f, 0x64, 0xf8, 0xfb, 0xac, 0x67, 0x3c, 0x27, 0xbe,
	0x23, 0xe5, 0xa3, 0xd5, 0x40, 0x22, 0xc2, 0xdf, 0x10, 0x54, 0x66, 0x10, 0x8e, 0x26, 0x1d, 0x2f,
	0xad, 0xca, 0xe4, 0x7e, 0x91, 0xd5, 0x15, 0x10, 0x22, 0x9e, 0x9f, 0x11, 0x48, 0x33, 0x78, 0x06,
	0xb3, 0x87, 0x0f, 0x97, 0x3d, 0x21, 0x3e, 0xe9, 0xf2, 0xe3, 0x8c, 0xd1, 0x11, 0xb7, 0x8f, 0x08,
	0xaa, 0xc7, 0xe7, 0x9e, 0x7b, 0x64, 0x5d, 0x98, 0x53, 0x1d, 0xec, 0x8f, 0x13, 0x73, 0xf0, 0x9d,
	0xf4, 0x43, 0x92, 0x77, 0x57, 0xf9, 0xee, 0x22, 0xbf, 0x89, 0xc4, 0xdd, 0x96, 0xac, 0xbd, 0xd9,
	0x0c, 0xee, 0xca, 0xf7, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x85, 0xbe, 0x1d, 0x52, 0x55, 0x0b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserAuthorizationGrpcServiceClient is the client API for UserAuthorizationGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserAuthorizationGrpcServiceClient interface {
	// Do a user have the correct rights to execute a specific API
	IsUserAuthorized(ctx context.Context, in *UserAuthorizationRequest, opts ...grpc.CallOption) (*UserAuthorizationResponse, error)
	// List users authorized accounts
	ListUsersAuthorizedAccounts(ctx context.Context, in *UserAuthorizedAccountsRequest, opts ...grpc.CallOption) (*UserAuthorizedAccountsResponse, error)
	// List users authorized account types
	ListUsersAuthorizedAccountTypes(ctx context.Context, in *UserAuthorizedAccountTypesRequest, opts ...grpc.CallOption) (*UserAuthorizedAccountTypesResponse, error)
	// List users authorized companies
	ListUsersAuthorizedCompanies(ctx context.Context, in *UserAuthorizedCompaniesRequest, opts ...grpc.CallOption) (*UserAuthorizedCompaniesResponse, error)
	// List users authorized rules
	ListUsersAuthorizedRules(ctx context.Context, in *UserAuthorizedRulesRequest, opts ...grpc.CallOption) (*UserAuthorizedRulesResponse, error)
	// Shutdown server in a controlled way
	ShutDownUserAuthorizationServer(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*AckNackResponse, error)
}

type userAuthorizationGrpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserAuthorizationGrpcServiceClient(cc *grpc.ClientConn) UserAuthorizationGrpcServiceClient {
	return &userAuthorizationGrpcServiceClient{cc}
}

func (c *userAuthorizationGrpcServiceClient) IsUserAuthorized(ctx context.Context, in *UserAuthorizationRequest, opts ...grpc.CallOption) (*UserAuthorizationResponse, error) {
	out := new(UserAuthorizationResponse)
	err := c.cc.Invoke(ctx, "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/IsUserAuthorized", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthorizationGrpcServiceClient) ListUsersAuthorizedAccounts(ctx context.Context, in *UserAuthorizedAccountsRequest, opts ...grpc.CallOption) (*UserAuthorizedAccountsResponse, error) {
	out := new(UserAuthorizedAccountsResponse)
	err := c.cc.Invoke(ctx, "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthorizationGrpcServiceClient) ListUsersAuthorizedAccountTypes(ctx context.Context, in *UserAuthorizedAccountTypesRequest, opts ...grpc.CallOption) (*UserAuthorizedAccountTypesResponse, error) {
	out := new(UserAuthorizedAccountTypesResponse)
	err := c.cc.Invoke(ctx, "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedAccountTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthorizationGrpcServiceClient) ListUsersAuthorizedCompanies(ctx context.Context, in *UserAuthorizedCompaniesRequest, opts ...grpc.CallOption) (*UserAuthorizedCompaniesResponse, error) {
	out := new(UserAuthorizedCompaniesResponse)
	err := c.cc.Invoke(ctx, "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedCompanies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthorizationGrpcServiceClient) ListUsersAuthorizedRules(ctx context.Context, in *UserAuthorizedRulesRequest, opts ...grpc.CallOption) (*UserAuthorizedRulesResponse, error) {
	out := new(UserAuthorizedRulesResponse)
	err := c.cc.Invoke(ctx, "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthorizationGrpcServiceClient) ShutDownUserAuthorizationServer(ctx context.Context, in *EmptyParameter, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := c.cc.Invoke(ctx, "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ShutDownUserAuthorizationServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserAuthorizationGrpcServiceServer is the server API for UserAuthorizationGrpcService service.
type UserAuthorizationGrpcServiceServer interface {
	// Do a user have the correct rights to execute a specific API
	IsUserAuthorized(context.Context, *UserAuthorizationRequest) (*UserAuthorizationResponse, error)
	// List users authorized accounts
	ListUsersAuthorizedAccounts(context.Context, *UserAuthorizedAccountsRequest) (*UserAuthorizedAccountsResponse, error)
	// List users authorized account types
	ListUsersAuthorizedAccountTypes(context.Context, *UserAuthorizedAccountTypesRequest) (*UserAuthorizedAccountTypesResponse, error)
	// List users authorized companies
	ListUsersAuthorizedCompanies(context.Context, *UserAuthorizedCompaniesRequest) (*UserAuthorizedCompaniesResponse, error)
	// List users authorized rules
	ListUsersAuthorizedRules(context.Context, *UserAuthorizedRulesRequest) (*UserAuthorizedRulesResponse, error)
	// Shutdown server in a controlled way
	ShutDownUserAuthorizationServer(context.Context, *EmptyParameter) (*AckNackResponse, error)
}

// UnimplementedUserAuthorizationGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserAuthorizationGrpcServiceServer struct {
}

func (*UnimplementedUserAuthorizationGrpcServiceServer) IsUserAuthorized(ctx context.Context, req *UserAuthorizationRequest) (*UserAuthorizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsUserAuthorized not implemented")
}
func (*UnimplementedUserAuthorizationGrpcServiceServer) ListUsersAuthorizedAccounts(ctx context.Context, req *UserAuthorizedAccountsRequest) (*UserAuthorizedAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsersAuthorizedAccounts not implemented")
}
func (*UnimplementedUserAuthorizationGrpcServiceServer) ListUsersAuthorizedAccountTypes(ctx context.Context, req *UserAuthorizedAccountTypesRequest) (*UserAuthorizedAccountTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsersAuthorizedAccountTypes not implemented")
}
func (*UnimplementedUserAuthorizationGrpcServiceServer) ListUsersAuthorizedCompanies(ctx context.Context, req *UserAuthorizedCompaniesRequest) (*UserAuthorizedCompaniesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsersAuthorizedCompanies not implemented")
}
func (*UnimplementedUserAuthorizationGrpcServiceServer) ListUsersAuthorizedRules(ctx context.Context, req *UserAuthorizedRulesRequest) (*UserAuthorizedRulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsersAuthorizedRules not implemented")
}
func (*UnimplementedUserAuthorizationGrpcServiceServer) ShutDownUserAuthorizationServer(ctx context.Context, req *EmptyParameter) (*AckNackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShutDownUserAuthorizationServer not implemented")
}

func RegisterUserAuthorizationGrpcServiceServer(s *grpc.Server, srv UserAuthorizationGrpcServiceServer) {
	s.RegisterService(&_UserAuthorizationGrpcService_serviceDesc, srv)
}

func _UserAuthorizationGrpcService_IsUserAuthorized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAuthorizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthorizationGrpcServiceServer).IsUserAuthorized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/IsUserAuthorized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthorizationGrpcServiceServer).IsUserAuthorized(ctx, req.(*UserAuthorizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuthorizationGrpcService_ListUsersAuthorizedAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAuthorizedAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedAccounts(ctx, req.(*UserAuthorizedAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuthorizationGrpcService_ListUsersAuthorizedAccountTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAuthorizedAccountTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedAccountTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedAccountTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedAccountTypes(ctx, req.(*UserAuthorizedAccountTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuthorizationGrpcService_ListUsersAuthorizedCompanies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAuthorizedCompaniesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedCompanies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedCompanies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedCompanies(ctx, req.(*UserAuthorizedCompaniesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuthorizationGrpcService_ListUsersAuthorizedRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAuthorizedRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ListUsersAuthorizedRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthorizationGrpcServiceServer).ListUsersAuthorizedRules(ctx, req.(*UserAuthorizedRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuthorizationGrpcService_ShutDownUserAuthorizationServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthorizationGrpcServiceServer).ShutDownUserAuthorizationServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userAuthorizationEngine_grpc_api.userAuthorizationGrpcService/ShutDownUserAuthorizationServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthorizationGrpcServiceServer).ShutDownUserAuthorizationServer(ctx, req.(*EmptyParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserAuthorizationGrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userAuthorizationEngine_grpc_api.userAuthorizationGrpcService",
	HandlerType: (*UserAuthorizationGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsUserAuthorized",
			Handler:    _UserAuthorizationGrpcService_IsUserAuthorized_Handler,
		},
		{
			MethodName: "ListUsersAuthorizedAccounts",
			Handler:    _UserAuthorizationGrpcService_ListUsersAuthorizedAccounts_Handler,
		},
		{
			MethodName: "ListUsersAuthorizedAccountTypes",
			Handler:    _UserAuthorizationGrpcService_ListUsersAuthorizedAccountTypes_Handler,
		},
		{
			MethodName: "ListUsersAuthorizedCompanies",
			Handler:    _UserAuthorizationGrpcService_ListUsersAuthorizedCompanies_Handler,
		},
		{
			MethodName: "ListUsersAuthorizedRules",
			Handler:    _UserAuthorizationGrpcService_ListUsersAuthorizedRules_Handler,
		},
		{
			MethodName: "ShutDownUserAuthorizationServer",
			Handler:    _UserAuthorizationGrpcService_ShutDownUserAuthorizationServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userAuthorizationEngine_grpc_api.proto",
}
